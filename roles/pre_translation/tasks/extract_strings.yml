---

- name: Get current working directory
  ansible.builtin.set_fact:
    current_directory: "{{ lookup('env', 'PWD') }}"

- name: Temporary Repository Storage Directory
  ansible.builtin.file:
    state: directory
    name: "{{ role_path }}/files/_clones/"
    mode: 0775
  register: clone_dir

- name: Set component name variable
  ansible.builtin.set_fact:
    component: '{{ repo_url.split("/")[1].replace(".git", "") }}'

- name: Set clone_repo path
  ansible.builtin.file:
    state: directory
    name: "{{ role_path }}/files/_clones/{{ component }}"
    mode: 0775
  register: clone_directory

- name: Cloned Repository Directory (From Repository - latest changes)
  ansible.builtin.git:
    repo: 'git@github.com:{{ repo_url }}.git'
    dest: '{{ clone_directory.path }}'
    version: '{{ repo_branch }}'
    force: true
    depth: 1

- name: Temporary Strings Storage Directory in repository
  ansible.builtin.file:
    state: directory
    path: "{{ clone_directory.path }}/translations"
    mode: 0775
  register: translations_dir

- name: If Custom script is provided, copy it into the clone and execute it (assumes local script, not part of clone)
  when:
    - local_shell_script_path is defined
  block:
    - name: Create tools/scripts/l18n directory if needed
      ansible.builtin.file:
        path: "{{ clone_directory.path }}/tools/scripts/l18n"
        state: directory
        mode: 0775

    - name: Copy Script into clone
      ansible.builtin.copy:
        src: "{{ local_shell_script_path }}"
        dest: "{{ clone_directory.path }}/{{ shell_script_path }}"
        mode: 0755

- name: Pre_translation shell script
  block:
    - name: Permissions for Script
      ansible.builtin.file:
        path: "{{ clone_directory.path }}/{{ shell_script_path }}"
        mode: 0755

    - name: Run Script
      ansible.builtin.shell: "source {{ shell_script_path }}"
      args:
        chdir: "{{ role_path }}/files/_clones/{{ component }}"
      changed_when: false

- name: List all files in translations_dir
  ansible.builtin.command: "ls {{ translations_dir.path }}"
  register: translations_loop
  changed_when: false

- name: Translations Files in List
  ansible.builtin.set_fact:
    translation_files: "{{ translations_loop.stdout_lines }}"
