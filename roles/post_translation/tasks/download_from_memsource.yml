---

- name: Get current working directory
  ansible.builtin.set_fact:
    current_directory: "{{ lookup('env', 'PWD') }}"

- name: Temporate Repository Storage Directory
  ansible.builtin.file:
    state: directory
    name: "{{ role_path }}/files/_translations/"
    mode: 0775
  register: translations_dir

- name: Set component name variable
  ansible.builtin.set_fact:
    component: '{{ repo_url.split("/")[1].replace(".git", "") }}'

- name: Get Project by Project Name
  ansible.memsource.memsource_project_info:
    project_name: "{{ project_name }}"
    memsource_username: "{{ memsource_username }}"
    memsource_password: "{{ memsource_password }}"
  register: _project

- name: Set Project UID from project name
  ansible.builtin.set_fact:
    project_uid: "{{ _project.projects.content[0].uid }}"
  when: project_uid is not defined

- name: Gather information about a specific job
  ansible.memsource.memsource_job_info:
    project_uid: "{{ project_uid }}"
    memsource_username: "{{ memsource_username }}"
    memsource_password: "{{ memsource_password }}"
  register: _jobs

- name: Set the jobs retrieved as a list
  ansible.builtin.set_fact:
    jobs: "{{ _jobs.jobs }}"

- name: Create directory structure for all languages
  ansible.builtin.file:
    state: directory
    path: "{{ role_path }}/files/_translations/{{ component }}/{{ item.targetLang }}/"
    mode: 0775
  with_items: "{{ jobs }}"

- name: Retrieve job information (download files)
  ansible.memsource.memsource_job_targetfile:
    job_uid: "{{ item.uid }}"
    project_uid: "{{ project_uid }}"
    path: "{{ role_path }}/files/_translations/{{ component }}/{{ item.targetLang }}/{{ item.filename | basename }}"
    force: true
    memsource_username: "{{ memsource_username }}"
    memsource_password: "{{ memsource_password }}"
  with_items: "{{ jobs }}"
  register: job_content
